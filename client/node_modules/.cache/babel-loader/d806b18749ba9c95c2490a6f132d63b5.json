{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducer'; // combine all reducer and use it as a root reducer\n//A store is not a class. It's just an object with a few methods on it. To create it, pass your \n//root reducing function to createStore.\n// Store Methods\n// getState()\n// dispatch(action)\n// subscribe(listener)\n// replaceReducer(nextReducer)\n\nconst initialState = {}; //Initially its empty\n\nconst middleware = [thunk]; //Just initialize to the middleware.\n\nconst store = createStore( //createStore(reducer, [preloadedState], [enhancer])\nrootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store; // connect react and redux using provider.","map":{"version":3,"sources":["/Users/kamz/PROcode/client/src/store/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","rootReducer","initialState","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB,C,CAAsC;AAItC;AACA;AAGA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG,EAArB,C,CAA4B;;AAE5B,MAAMC,UAAU,GAAG,CAACH,KAAD,CAAnB,C,CAA4B;;AAE5B,MAAMI,KAAK,GAAGP,WAAW,EAAG;AACzBI,WADsB,EAErBC,YAFqB,EAGrBH,mBAAmB,CAACD,eAAe,CAAC,GAAGK,UAAJ,CAAhB,CAHE,CAAzB;AAMA,eAAeC,KAAf,C,CAEA","sourcesContent":["import {createStore, applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducer'; // combine all reducer and use it as a root reducer\n\n\n\n//A store is not a class. It's just an object with a few methods on it. To create it, pass your \n//root reducing function to createStore.\n\n\n// Store Methods\n// getState()\n// dispatch(action)\n// subscribe(listener)\n// replaceReducer(nextReducer)\n\nconst initialState = {};    //Initially its empty\n\nconst middleware = [thunk]; //Just initialize to the middleware.\n\nconst store = createStore(  //createStore(reducer, [preloadedState], [enhancer])\n   rootReducer, \n    initialState, \n    composeWithDevTools(applyMiddleware(...middleware))\n    );\n\nexport default store;\n\n// connect react and redux using provider.\n\n\n"]},"metadata":{},"sourceType":"module"}